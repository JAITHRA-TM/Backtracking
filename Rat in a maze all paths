#include <bits/stdc++.h> 
bool isValid(int r, int c, vector<vector<int>> &maze, vector<vector<int>> &sol, int n){
       return r >= 0 && c >= 0 && r < n && c < n && maze[r][c] == 1 && sol[r][c] == 0;
}
void findPath(int r, int c, vector<vector<int>> &maze, int n, vector<vector<int>> &sol, vector<vector<int>> &res){
  if(r == n-1 && c == n-1){
    vector<int> temp;
    sol[n-1][n-1] = 1;
    for(int i=0; i<n; i++){
      for (int j = 0; j < n; j++) {
        temp.push_back(sol[i][j]);
      }
    } 
    res.push_back(temp);
    sol[n-1][n-1] = 0;
    return;
  }
  sol[r][c] = 1;
  int dr[4] = {-1, 0, 0, 1};
  int dc[4] = {0, -1, 1, 0};
  for(int i=0; i<4; i++){
    int nextr = r + dr[i];
    int nextc = c + dc[i];
    if(isValid(nextr, nextc, maze, sol, n)){
      findPath(nextr, nextc, maze, n, sol, res);
    }
  }
  sol[r][c] = 0;
}
vector<vector<int> > ratInAMaze(vector<vector<int> > &maze, int n){
  // Write your code here.
  vector<vector<int>> res;
  vector<vector<int>> sol(n, vector<int>(n, 0));
  findPath(0, 0, maze, n, sol, res);
  return res;
}
